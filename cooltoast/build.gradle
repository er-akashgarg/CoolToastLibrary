apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

/*
apply plugin: 'com.novoda.bintray-release'

// Step 1: Add the below plugin
apply plugin: 'maven-publish'

// Step 2: Add the custom publication details like below


publish {
    userOrg = 'akashgarg'
    repoName = 'CoolToast'
    groupId = 'CoolToast'
    artifactId = 'cooltoast'
    publishVersion ='1.0.4'
    desc = 'CoolToast is like a Toast with cutom UI for android app.'
    website = 'https://github.com/er-akashgarg/CoolToastLibrary'
    bintrayUser = 'cooltoast'
    bintrayKey = '1a8f09333d7edc548de588af4dd5b1ea17466dd6'
    dryRun = 'false'
*/
/*
//     Step 2: Add the custom publication details like below
    publishing {
        publications {
            MyPub(MavenPublication) {
                groupId  'CoolToast'
                artifactId 'cooltoast'
                version '1.0.3'
//                artifact "$buildDir/outputs/aar/artifact-debug.aar"
                //don't forget to add bundleRelease
                artifact bundleReleaseAar
            }
        }
    }

    //Step 3: don't forget to add your custom publication
    publications = ['MyPub']*//*

}


*/

/**/



apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

// for Bintray
def projectVersionCodeNr = Integer.parseInt(projectVersionCode);
def libGit = libGit
def libUrl = libUrl
def libDescription = libDescription
def libGroupId = libGroupId
def libArtifactId = libArtifactId

// for Maven
group = libGroupId
version = projectVersionName
install {
    repositories.mavenInstaller {
        pom.project {
            name libArtifactId
            description libDescription
            url libUrl
            inceptionYear '2016'

            packaging 'aar'
            groupId libGroupId
            artifactId libArtifactId
            version projectVersionName

            licenses {
                license {
                    name 'MIT'
                    url libLicenseUrl
                }
            }
        }
    }
}
//
//
bintray {
    user = bintray_user
    key = bintray_apikey
    pkg {
        repo = libGroupId
        name = libArtifactId
        // userOrg = bintray_user_org
        licenses = ['MIT']
        vcsUrl = libGit
        version {
            name = projectVersionName
            gpg {
                sign = true
                passphrase = bintray_gpg_passphrase
            }
        }
    }
    configurations = ['archives']
}

/**/





android {

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 2
        versionName "1.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    task generateSourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs classifier 'sources'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }

//    tasks.withType(Javadoc).all {
//        enabled = false
//    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "com.intuit.sdp:sdp-android:$sdp_lib_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}