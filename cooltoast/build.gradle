apply plugin: 'com.novoda.bintray-release'
apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

// Step 1: Add the below plugin
apply plugin: 'maven-publish'


ext{
    bintrayRepo = 'maven'
    bintrayName = 'cooltoast'
}
// Step 2: Add the custom publication details like below
publish {

    def groupProjectID = 'com.akashgarg.cooltoastlibrary'
    def artifactProjectID = 'cooltoast'
    def publishVersionID = '1.0'


    userOrg = 'akashgarg'
    repoName = 'CoolToast'
    groupId = groupProjectID
    artifactId = artifactProjectID
    publishVersion = publishVersionID
    desc = 'CoolToast is like a Toast with cutom UI for android app.'
    website = 'https://github.com/er-akashgarg/CoolToastLibrary'

    // Step 2: Add the custom publication details like below
    publishing {
        publications {
            library(MavenPublication) {
                groupId groupProjectID
                artifactId artifactProjectID
                version publishVersionID
                artifact "$buildDir/outputs/aar/artifact-debug.aar"
                //don't forget to add bundleRelease
                artifact bundleDebugAar
            }
        }
    }

    //Step 3: don't forget to add your custom publication
    publications = [':cooltoast']

    /*publishing {
        publications {
            maven(MavenPublication) {
                groupId groupProjectID
                artifactId artifactProjectID
                version publishVersionID
                artifact "$buildDir/outputs/aar/artifact-release.aar"
                artifact bundleReleaseAar
//                artifact releaseJavadocsJar

                // Generate pom file so that the artifact dependencies can be fetched automatically.
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.compile.allDependencies.each { dependency ->
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                    }
                }
            }
        }

    }
}*/
}

android {

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    task generateSourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs classifier 'sources'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    repositories {
        mavenCentral()
        jcenter()
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation "com.intuit.sdp:sdp-android:$sdp_lib_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

repositories {
    mavenCentral()
    jcenter()
}
